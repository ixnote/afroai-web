// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://afroaiuser:password123@localhost:5433/afroai?schema=public"
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique
  email      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime
}

model OAuthProvider {
  id            Int    @id
  name          String
  client_id     String
  client_secret String
}

// -- Users table
// CREATE TABLE users (
//     id SERIAL PRIMARY KEY,
//     username VARCHAR(255) UNIQUE NOT NULL,
//     email VARCHAR(255) UNIQUE NOT NULL,
//     created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
//     updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
// );

// -- OAuth providers table
// CREATE TABLE oauth_providers (
//     id SERIAL PRIMARY KEY,
//     name VARCHAR(50) UNIQUE NOT NULL,
//     client_id VARCHAR(255) NOT NULL,
//     client_secret VARCHAR(255) NOT NULL
// );

// -- User OAuth accounts table
// CREATE TABLE user_oauth_accounts (
//     id SERIAL PRIMARY KEY,
//     user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
//     provider_id INTEGER REFERENCES oauth_providers(id) ON DELETE CASCADE,
//     provider_user_id VARCHAR(255) NOT NULL,
//     access_token TEXT NOT NULL,
//     refresh_token TEXT,
//     expires_at TIMESTAMP WITH TIME ZONE,
//     created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
//     updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
//     UNIQUE (provider_id, provider_user_id)
// );

// -- AI models table
// CREATE TABLE ai_models (
//     id SERIAL PRIMARY KEY,
//     name VARCHAR(50) UNIQUE NOT NULL
// );

// -- Token usage table
// CREATE TABLE token_usage (
//     id SERIAL PRIMARY KEY,
//     user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
//     model_id INTEGER REFERENCES ai_models(id) ON DELETE CASCADE,
//     tokens_used INTEGER NOT NULL,
//     date DATE NOT NULL,
//     created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
// );

// -- User sessions table
// CREATE TABLE user_sessions (
//     id SERIAL PRIMARY KEY,
//     user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
//     session_token VARCHAR(255) UNIQUE NOT NULL,
//     expires_at TIMESTAMP WITH TIME ZONE NOT NULL,
//     created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
//     last_activity TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
// );

// -- Indexes for faster lookups
// CREATE INDEX idx_user_oauth_accounts_user_id ON user_oauth_accounts(user_id);
// CREATE INDEX idx_user_oauth_accounts_provider_id ON user_oauth_accounts(provider_id);
// CREATE INDEX idx_token_usage_user_id ON token_usage(user_id);
// CREATE INDEX idx_token_usage_model_id ON token_usage(model_id);
// CREATE INDEX idx_token_usage_date ON token_usage(date);
// CREATE INDEX idx_user_sessions_user_id ON user_sessions(user_id);
// CREATE INDEX idx_user_sessions_session_token ON user_sessions(session_token);
